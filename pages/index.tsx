import { collection, onSnapshot, orderBy, query } from "firebase/firestore";
import Head from "next/head";
import Link from "next/link";
import { useCallback, useEffect, useState } from "react";
import Message from "../components/Message";
import Spinner from "../components/Spinner";
import { db } from "../utils/firebase";
import { IPropsPost } from "./post/edit";

export default function Home() {
  const [allPosts, setAllPosts] = useState<IPropsPost[]>([]);

  const [isLoading, setIsLoading] = useState<boolean>(true);

  const getPosts = useCallback(() => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp"));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setAllPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
      setIsLoading(false);
    });

    return unsubscribe;
  }, []);

  useEffect(() => {
    getPosts();
  });

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-[80vh]">
        <Spinner />
      </div>
    );
  }

  return (
    <div>
      <Head>
        <title>TW - Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="my-12 text-lg">
          <h2 className="text-2xl">See what other people are saying</h2>
          <div className="space-y-4">
            {allPosts.map((post) => (
              <Message key={post?.id} {...post}>
                <Link href={{ pathname: `/post/${post.id}` }}>
                  <button className="px-4 py-2 text-sm rounded-md hover:bg-gray-100">comments ({post?.comments?.length ?? 0})</button>
                </Link>
              </Message>
            ))}
          </div>
        </div>
      </main>
    </div>
  );
}
